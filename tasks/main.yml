---
# tasks file for umn_sample_role
- block:
  - name: "Oracle instant client"
    yum:
      name:
        - "https://download.oracle.com/otn_software/linux/instantclient/2350000/oracle-instantclient-basic-23.5.0.24.07-1.el9.x86_64.rpm"
        - "https://download.oracle.com/otn_software/linux/instantclient/2350000/oracle-instantclient-devel-23.5.0.24.07-1.el9.x86_64.rpm"
      disable_gpg_check: true
      state: "present"
    when: laravel_require_oracle
  - name: "Include the geerlingguy.php role"
    ansible.builtin.include_role:
      name: geerlingguy.php
  - name: "Install nodejs repo"
    shell: "curl -fsSL https://rpm.nodesource.com/setup_22.x | sudo bash -"
  - name: "Install node 22"
    yum:
      name: "nodejs"
      state: "present"
  - name: "Create a /var/www/<appname_short</shared/storage and set it to 777"
    file:
      path: "/var/www/{{ appname_short }}/shared/storage"
      state: directory
      owner: "{{ laravel_deploy_user  }}"
      group: "{{ laravel_deploy_group  }}"
      mode: "0777"
  - name: "Configure SElinux so that nginx can write to /var/www/<appname_short>/<release>/storage"
    sefcontext:
      target: "/var/www/{{ appname_short }}/shared/storage/(/.*)?"
      setype: "httpd_sys_rw_content_t"
      state: "present"
  - name: "configure SElinux so that nginx can write to /var/www/<appname_short>/<release>/storage"
    sefcontext:
      target: "/var/www/{{ appname_short  }}/releases/[^/]*/storage/(/.*)?"
      setype: "httpd_sys_rw_content_t"
      state: "present"
  - name: "set an ACL so nginx has write access to storage for new files"
    acl:
      path: "/var/www/{{ appname_short}}/shared/storage"
      entity: "nginx"
      etype: "user"
      permissions: "rwx"
      state: "present"
      default: true
      recursive: true
  - name: "set an ACL so the deploy user has write access to storage for new files"
    acl:
      path: "/var/www/{{ appname_short}}/shared/storage"
      entity: "{{ laravel_deploy_user  }}"
      etype: "user"
      permissions: "rwx"
      state: "present"
      default: true
      recursive: true
  - name: "Grant service user permissions to write to var/www/<appname_short> using an acl"
    acl:
      path: "/var/www/{{ appname_short }}/"
      entity: "{{ laravel_service_user }}"
      etype: "user"
      permissions: "rwx"
      state: "present"
      default: true
      recursive: true
  - name: "Grant service user permissions to write to var/www/<appname_short> using an acl"
    acl:
      path: "/var/www/{{ appname_short }}/"
      entity: "{{ laravel_service_user }}"
      etype: "user"
      permissions: "rwx"
      state: "present"
      default: false
      recursive: true
    when: deploy_user != None
  - name: include reverb
    include_tasks: reverb.yml
    when: laravel_require_reverb
  - name: include horizon
    include_tasks: horizon.yml
    when: laravel_require_horizon
  - name: include queue worker
    include_tasks: queue.yml
    when: laravel_require_queue
  - name: copy in laravel env file
    template:
      src: "env.j2"
      dest: "/var/www/{{appname_short}}/shared/.env"
      owner: "{{ laravel_deploy_user  }}"
      group: "{{ laravel_deploy_group  }}"
      mode: "0644"
    notify:
      - cache artisan
    tags:
      - password
  - name: Email cron failure to us
    cronvar:
      name: MAILTO
      value: "{{ laravel_cron_failure_address }}"
  - name: Add cron job for laravel
    cron:
      name: Laravel Periodic Tasks
      job: "cd {{ laravel_app_path }} && /usr/bin/php artisan schedule:run >> /dev/null 2>&1"
  - name: Install logrotate configuration
    template:
      src: logrotate.j2
      dest: "/etc/logrotate.d/laravel-{{ laravel_appname }}"
      owner: root
      group: root
      mode: '0644'
    notify: reload logrotate
  - name: Set SELinux context for log file
    sefcontext:
      target: "/var/www/{{ appname_short }}/shared/storage/logs(/.*)?"
      setype: "httpd_sys_rw_content_t"
      state: "present"
  - name: "make sure the laravel.log file is owned by the deploy user"
    file:
      path: "/var/www/{{ appname_short }}/shared/storage/logs/laravel.log"
      owner: "{{ laravel_deploy_user }}"
      group: "{{ laravel_deploy_group }}"
      state: file
  - name: "deploy the custom 502 page"
    template:
      src: "502.j2"
      dest: "/var/www/{{ appname_short }}/shared/storage/502.html"
      owner: "{{ laravel_deploy_user }}"
      group: "{{ laravel_deploy_group }}"
      mode: "0644"
  become: true
  